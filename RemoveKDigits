// https://leetcode.com/problems/remove-k-digits
// Complexity is O(n^2)

class Solution {
    public String removeKdigits(String num, int k) {
        if (num == "") return "0";
        Stack<Integer> stack = new Stack<>();
        int count = 0;
        for (int i = 0; i <= num.length(); i++) {
            int cur = i == num.length() ? -1 : num.charAt(i) - '0';
            while (!stack.isEmpty() && cur < stack.peek() && count < k) {
                stack.pop();
                count++;
            }
            if (cur == -1) continue;
            stack.push(cur);
        }
        StringBuilder sb = new StringBuilder();
        
        while (!stack.isEmpty()) {
            sb.append(stack.pop());
        }
        while (sb.length() > 1 && sb.charAt(sb.length() - 1) == '0') {
            sb.deleteCharAt(sb.length() - 1);
        }
        return sb.reverse().toString().length() == 0 ? "0" : sb.toString();
        
    }
}

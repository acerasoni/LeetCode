// https://leetcode.com/problems/asteroid-collision/submissions/
// Solution is O(n^2)

class Solution {
    public int[] asteroidCollision(int[] asteroids) {
      List<Integer> ast = new ArrayList<>(); 
      int midPoint = 0;
      boolean flag, negatives;
    
      for(Integer i : asteroids) ast.add(i);
      while(midPoint < ast.size() && ast.get(midPoint) < 0) midPoint++;
     
      while(true) {
         flag = true;
         negatives = true;
          
         for(int x = midPoint+1; x < ast.size(); x++) {
             if(ast.get(x) < 0 && ast.get(x-1) > 0) { 
                 flag = false;
                 if(Math.abs(ast.get(x)) == ast.get(x-1)) {
                       ast.remove(x);
                       ast.remove(x-1);
                  }
                  else if(Math.abs(ast.get(x)) > ast.get(x-1)) ast.remove(x-1);
                  else ast.remove(x);
                  break;
             }                
        }
        
        if(ast.size() == 0) break;
        if(flag) break;
     }
     
      int[] res = new int[ast.size()];
      for(int x = 0; x < ast.size(); x++) res[x] = ast.get(x);
      return res;
    }            
}

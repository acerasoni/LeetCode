// Exercise to better understand bit manipulation on signed integers

public class BitManipulation {

    public static boolean getBit(int num, int bit) {
        return (num & (1 << bit)) != 0;
    }

    public static int setBit(int num, int bit) {
        return num | (1 << bit);
    }

    public static int clearBit(int num, int bit) {
        return (num & ~(1 << bit));
    }

    public static int updateBit(int num, int bit, boolean isOne) {
        return isOne ? setBit(num, bit) : clearBit(num, bit);
    }

    public static void main(String... args) {
        System.out.println(setBit(58, 2));
        System.out.println(getBit(58, 1));
        System.out.println(clearBit(58, 2));
        System.out.println(updateBit(58, 3, false));
    }
}

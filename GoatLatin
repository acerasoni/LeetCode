// https://leetcode.com/problems/goat-latin
// Complexity is O(n)

class Solution {
    public String toGoatLatin(String S) {
        Set<Character> vowels = new HashSet<>();
        vowels.add('a');
        vowels.add('e');
        vowels.add('i');
        vowels.add('o');
        vowels.add('u');
        vowels.add('A');
        vowels.add('E');
        vowels.add('I');
        vowels.add('O');
        vowels.add('U');
    
        String[] words = S.split(" ");
        StringBuilder bob;
        StringBuilder pilchard = new StringBuilder();
        String end = "a";
        int count = 1;
        for (int i =0; i < words.length; i++) {
            bob = new StringBuilder(words[i]);
            if (vowels.contains(words[i].charAt(0))) {
                 bob.append("ma");
            } else {
             bob.append(words[i].charAt(0));
             bob.deleteCharAt(0);
             bob.append("ma");
          }
        bob.append(end);
        end += "a";
        pilchard.append(bob + " ");
    }
        pilchard.deleteCharAt(pilchard.length() -1);
    return pilchard.toString();
    }
}
